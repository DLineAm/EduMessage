//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0+ge1fa92580f
//       
//       Command:
//           LottieGen -GenerateColorBindings -Language CSharp -Public -WinUIVersion 2.4 -InputFile loader.json
//       
//       Input file:
//           loader.json (20326 bytes created 14:57+03:00 Feb 24 2022)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   141 |
// |--------------------------+-------|
// | Expression animators     |     8 |
// | KeyFrame animators       |     6 |
// | Reference parameters     |     8 |
// | Expression operations    |     8 |
// |--------------------------+-------|
// | Animated brushes         |     2 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     3 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     3 |
// |--------------------------+-------|
// | ContainerShapes          |     4 |
// | CompositionSpriteShapes  |    21 |
// |--------------------------+-------|
// | Brushes                  |     2 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedVisuals
{
    // Name:        2x2 Cubes Line_Small (Lottie Render)
    // Frame rate:  60 fps
    // Frame count: 36
    // Duration:    600.0 mS
    // ________________________________________________
    // | Marker | Constant | Frame |  mS   | Progress |
    // |________|__________|_______|_______|__________|
    // | 1      | M_1      |    36 | 600.0 | 1F       |
    // ------------------------------------------------
    // ___________________________________________________________
    // | Theme property |   Accessor   | Type  |  Default value  |
    // |________________|______________|_______|_________________|
    // | #000000        | Color_000000 | Color | #FF000000 Black |
    // | #FFFFFF        | Color_FFFFFF | Color | #FFFFFFFF White |
    // -----------------------------------------------------------
    sealed class Loader
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 0.600 seconds.
        internal const long c_durationTicks = 6000000;

        // Marker: 1.
        internal const float M_1 = 1F;

        // Theme property: Color_000000.
        internal static readonly Color c_themeColor_000000 = Color.FromArgb(0xFF, 0x00, 0x00, 0x00);

        // Theme property: Color_FFFFFF.
        internal static readonly Color c_themeColor_FFFFFF = Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF);

        CompositionPropertySet _themeProperties;
        Color _themeColor_000000 = c_themeColor_000000;
        Color _themeColor_FFFFFF = c_themeColor_FFFFFF;

        // Theme properties.
        public Color Color_000000
        {
            get => _themeColor_000000;
            set
            {
                _themeColor_000000 = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Color_000000", ColorAsVector4((Color)_themeColor_000000));
                }
            }
        }

        public Color Color_FFFFFF
        {
            get => _themeColor_FFFFFF;
            set
            {
                _themeColor_FFFFFF = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Color_FFFFFF", ColorAsVector4((Color)_themeColor_FFFFFF));
                }
            }
        }

        static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties == null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Color_000000", ColorAsVector4((Color)Color_000000));
                _themeProperties.InsertVector4("Color_FFFFFF", ColorAsVector4((Color)Color_FFFFFF));
            }
            return _themeProperties;
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (Loader_AnimatedVisual.IsRuntimeCompatible())
            {
                return
                    new Loader_AnimatedVisual(
                        compositor,
                        _themeProperties
                        );
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 36d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 36d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "1", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
            if (propertyName == "Color_000000")
            {
                _themeColor_000000 = value;
            }
            else if (propertyName == "Color_FFFFFF")
            {
                _themeColor_FFFFFF = value;
            }
            else
            {
                return;
            }

            if (_themeProperties != null)
            {
                _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
            }
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Loader_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 6000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Color_000000;
            CompositionColorBrush _themeColor_Color_FFFFFF;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - - Opacity for layer: Cube 4
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-25.9810009F, -35F));
                    builder.AddLine(new Vector2(-43.3009987F, -25F));
                    builder.AddLine(new Vector2(-25.9810009F, -15F));
                    builder.AddLine(new Vector2(-8.65999985F, -25F));
                    builder.AddLine(new Vector2(-25.9810009F, -35F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 4
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-8.65999985F, -25F));
                    builder.AddLine(new Vector2(-25.9810009F, -15F));
                    builder.AddLine(new Vector2(-25.9810009F, 5F));
                    builder.AddLine(new Vector2(-8.65999985F, -5F));
                    builder.AddLine(new Vector2(-8.65999985F, -25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 4
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-25.9810009F, -15F));
                    builder.AddLine(new Vector2(-43.3009987F, -25F));
                    builder.AddLine(new Vector2(-43.3009987F, -5F));
                    builder.AddLine(new Vector2(-25.9810009F, 5F));
                    builder.AddLine(new Vector2(-25.9810009F, -15F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 20F));
                    builder.AddLine(new Vector2(17.3199997F, 10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(-17.3209991F, 10F));
                    builder.AddLine(new Vector2(0F, 20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(17.3199997F, -10F));
                    builder.AddLine(new Vector2(17.3199997F, 10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(0F, -20F));
                    builder.AddLine(new Vector2(17.3199997F, -10F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-17.3209991F, -10F));
                    builder.AddLine(new Vector2(-17.3209991F, 10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(0F, -20F));
                    builder.AddLine(new Vector2(-17.3209991F, -10F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(17.3199997F, -10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(0F, 20F));
                    builder.AddLine(new Vector2(17.3199997F, 10F));
                    builder.AddLine(new Vector2(17.3199997F, -10F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(0F, 20F));
                    builder.AddLine(new Vector2(-17.3209991F, 10F));
                    builder.AddLine(new Vector2(-17.3209991F, -10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -20F));
                    builder.AddLine(new Vector2(-17.3209991F, -10F));
                    builder.AddLine(new Vector2(0F, 0F));
                    builder.AddLine(new Vector2(17.3199997F, -10F));
                    builder.AddLine(new Vector2(0F, -20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(25.9810009F, 35F));
                    builder.AddLine(new Vector2(43.3009987F, 25F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(8.65999985F, 25F));
                    builder.AddLine(new Vector2(25.9810009F, 35F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(43.3009987F, 5F));
                    builder.AddLine(new Vector2(43.3009987F, 25F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(25.9810009F, -5F));
                    builder.AddLine(new Vector2(43.3009987F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(8.65999985F, 5F));
                    builder.AddLine(new Vector2(8.65999985F, 25F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(25.9810009F, -5F));
                    builder.AddLine(new Vector2(8.65999985F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(43.3009987F, 5F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(25.9810009F, 35F));
                    builder.AddLine(new Vector2(43.3009987F, 25F));
                    builder.AddLine(new Vector2(43.3009987F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(25.9810009F, 35F));
                    builder.AddLine(new Vector2(8.65999985F, 25F));
                    builder.AddLine(new Vector2(8.65999985F, 5F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(25.9810009F, -5F));
                    builder.AddLine(new Vector2(8.65999985F, 5F));
                    builder.AddLine(new Vector2(25.9810009F, 15F));
                    builder.AddLine(new Vector2(43.3009987F, 5F));
                    builder.AddLine(new Vector2(25.9810009F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(51.9620018F, 50F));
                    builder.AddLine(new Vector2(69.2819977F, 40F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(34.6409988F, 40F));
                    builder.AddLine(new Vector2(51.9620018F, 50F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(69.2819977F, 20F));
                    builder.AddLine(new Vector2(69.2819977F, 40F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(51.9620018F, 10F));
                    builder.AddLine(new Vector2(69.2819977F, 20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(34.6409988F, 20F));
                    builder.AddLine(new Vector2(34.6409988F, 40F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(51.9620018F, 10F));
                    builder.AddLine(new Vector2(34.6409988F, 20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(69.2819977F, 20F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(51.9620018F, 50F));
                    builder.AddLine(new Vector2(69.2819977F, 40F));
                    builder.AddLine(new Vector2(69.2819977F, 20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(51.9620018F, 50F));
                    builder.AddLine(new Vector2(34.6409988F, 40F));
                    builder.AddLine(new Vector2(34.6409988F, 20F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Opacity for layer: Cube 1
            // - - ShapeGroup: Top 2
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(51.9620018F, 10F));
                    builder.AddLine(new Vector2(34.6409988F, 20F));
                    builder.AddLine(new Vector2(51.9620018F, 30F));
                    builder.AddLine(new Vector2(69.2819977F, 20F));
                    builder.AddLine(new Vector2(51.9620018F, 10F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color bound to theme property value: Color_000000
            CompositionColorBrush ThemeColor_Color_000000()
            {
                var result = _themeColor_Color_000000 = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Color_000000.W,_theme.Color_000000.X,_theme.Color_000000.Y,_theme.Color_000000.Z)", "_theme", _themeProperties);
                return result;
            }

            // Color bound to theme property value: Color_FFFFFF
            CompositionColorBrush ThemeColor_Color_FFFFFF()
            {
                var result = _themeColor_Color_FFFFFF = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Color_FFFFFF.W,_theme.Color_FFFFFF.X,_theme.Color_FFFFFF.Y,_theme.Color_FFFFFF.Z)", "_theme", _themeProperties);
                return result;
            }

            // Opacity for layer: Cube 4
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_00());
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_01());
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_02());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), RootProgress());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_03());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_04());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_05());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_06());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_07());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_08());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_09());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_10());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_11());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_12());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_13());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_14());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // Opacity for layer: Cube 1
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_15());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_16());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_17());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_18());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_19());
                // ShapeGroup: Top 2
                shapes.Add(SpriteShape_20());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_3(), _rootProgress);
                return result;
            }

            // - - Opacity for layer: Cube 4
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Opacity for layer: Cube 4
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - Opacity for layer: Cube 4
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_10()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - - Layer aggregator
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_15()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_16()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_16()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_17()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_17()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_18()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_18()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_19()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_19()));
            }

            // - - Opacity for layer: Cube 1
            // ShapeGroup: Top 2
            CompositionPathGeometry PathGeometry_20()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_20()));
            }

            // - Opacity for layer: Cube 4
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                var result = _c.CreateSpriteShape(PathGeometry_00());
                result.FillBrush = ThemeColor_Color_FFFFFF();
                result.StrokeBrush = ThemeColor_Color_000000();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 4
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                var result = _c.CreateSpriteShape(PathGeometry_01());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 4
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                var result = _c.CreateSpriteShape(PathGeometry_02());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                var result = _c.CreateSpriteShape(PathGeometry_03());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                var result = _c.CreateSpriteShape(PathGeometry_04());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                var result = _c.CreateSpriteShape(PathGeometry_05());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                var result = _c.CreateSpriteShape(PathGeometry_06());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                var result = _c.CreateSpriteShape(PathGeometry_07());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                var result = _c.CreateSpriteShape(PathGeometry_08());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                var result = _c.CreateSpriteShape(PathGeometry_09());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                var result = _c.CreateSpriteShape(PathGeometry_10());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                var result = _c.CreateSpriteShape(PathGeometry_11());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                var result = _c.CreateSpriteShape(PathGeometry_12());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                var result = _c.CreateSpriteShape(PathGeometry_13());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                var result = _c.CreateSpriteShape(PathGeometry_14());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                var result = _c.CreateSpriteShape(PathGeometry_15());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                var result = _c.CreateSpriteShape(PathGeometry_16());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                var result = _c.CreateSpriteShape(PathGeometry_17());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                var result = _c.CreateSpriteShape(PathGeometry_18());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                var result = _c.CreateSpriteShape(PathGeometry_19());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Opacity for layer: Cube 1
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                var result = _c.CreateSpriteShape(PathGeometry_20());
                result.FillBrush = _themeColor_Color_FFFFFF;
                result.StrokeBrush = _themeColor_Color_000000;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 3F;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: Cube 4
                children.InsertAtTop(ShapeVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_1());
                // Opacity for layer: Cube 1
                children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.800000012F, 0F), new Vector2(0.200000003F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Opacity for layer: Cube 1
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.5F, 0F, _holdThenStepEasingFunction);
                // Frame 36.
                result.InsertKeyFrame(1F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity for layer: Cube 4
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_1_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _holdThenStepEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.5F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: Cube 4
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(256F, 256F);
                result.Shapes.Add(ContainerShape_0());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_1_to_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(256F, 256F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                return result;
            }

            // Shape tree root for layer: Cube 1
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(256F, 256F);
                result.Shapes.Add(ContainerShape_3());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Opacity for layer: Cube 4
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(128F, 128F), HoldThenStepEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.5F, new Vector2(102.019997F, 113F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(128F, 128F), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.166666672F, new Vector2(128F, 128F), _holdThenStepEasingFunction);
                // Frame 24.
                result.InsertKeyFrame(0.666666687F, new Vector2(102.018997F, 113F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(128F, 128F), _stepThenHoldEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.333333343F, new Vector2(128F, 128F), _holdThenStepEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.833333313F, new Vector2(102.018997F, 113F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Opacity for layer: Cube 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(128F, 128F), _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.5F, new Vector2(128F, 128F), _holdThenStepEasingFunction);
                // Frame 36.
                result.InsertKeyFrame(1F, new Vector2(102.019997F, 113F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Loader_AnimatedVisual(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(256F, 256F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
